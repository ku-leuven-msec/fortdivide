diff -r --unified glib2.0-2.28.6/gobject/gparam.c glib2.0-2.28.6-patched//gobject/gparam.c
--- glib2.0-2.28.6/gobject/gparam.c	2011-01-05 22:44:06.000000000 +0100
+++ glib2.0-2.28.6-patched//gobject/gparam.c	2013-01-22 17:26:00.354637457 +0100
@@ -852,8 +852,8 @@
   GHashTable  *hash_table;
 };
 
-static guint
-param_spec_pool_hash (gconstpointer key_spec)
+guint
+g_param_spec_pool_hash (gconstpointer key_spec)
 {
   const GParamSpec *key = key_spec;
   const gchar *p;
@@ -865,8 +865,8 @@
   return h;
 }
 
-static gboolean
-param_spec_pool_equals (gconstpointer key_spec_1,
+gboolean
+g_param_spec_pool_equals (gconstpointer key_spec_1,
 			gconstpointer key_spec_2)
 {
   const GParamSpec *key1 = key_spec_1;
@@ -897,7 +897,7 @@
 
   memcpy (&pool->smutex, &init_smutex, sizeof (init_smutex));
   pool->type_prefixing = type_prefixing != FALSE;
-  pool->hash_table = g_hash_table_new (param_spec_pool_hash, param_spec_pool_equals);
+  pool->hash_table = g_hash_table_new (g_param_spec_pool_hash, g_param_spec_pool_equals);
 
   return pool;
 }
diff -r --unified glib2.0-2.28.6/gobject/gsignal.c glib2.0-2.28.6-patched//gobject/gsignal.c
--- glib2.0-2.28.6/gobject/gsignal.c	2011-04-14 00:55:30.000000000 +0200
+++ glib2.0-2.28.6-patched//gobject/gsignal.c	2013-01-22 17:22:25.558132113 +0100
@@ -170,9 +170,9 @@
 							 guint		  signal_id,
 							 GQuark		  detail,
 							 gpointer	  instance);
-static gint			class_closures_cmp	(gconstpointer	  node1,
+       gint			g_class_closures_cmp	(gconstpointer	  node1,
 							 gconstpointer	  node2);
-static gint			signal_key_cmp		(gconstpointer	  node1,
+       gint			g_signal_key_cmp	(gconstpointer	  node1,
 							 gconstpointer	  node2);
 static	      gboolean		signal_emit_unlocked_R	(SignalNode	 *node,
 							 GQuark		  detail,
@@ -271,7 +271,7 @@
 static GBSearchArray *g_signal_key_bsa = NULL;
 static const GBSearchConfig g_signal_key_bconfig = {
   sizeof (SignalKey),
-  signal_key_cmp,
+  g_signal_key_cmp,
   G_BSEARCH_ARRAY_ALIGN_POWER2,
 };
 static GBSearchConfig g_signal_hlbsa_bconfig = {
@@ -281,7 +281,7 @@
 };
 static GBSearchConfig g_class_closure_bconfig = {
   sizeof (ClassClosure),
-  class_closures_cmp,
+  g_class_closures_cmp,
   0,
 };
 static GHashTable    *g_handler_list_bsa_ht = NULL;
@@ -353,8 +353,8 @@
   return 0;
 }
 
-static gint
-class_closures_cmp (gconstpointer node1,
+gint
+g_class_closures_cmp (gconstpointer node1,
 		    gconstpointer node2)
 {
   const ClassClosure *c1 = node1, *c2 = node2;
@@ -752,8 +752,8 @@
     return G_HAVE_GROWING_STACK ? MAX (c, s) : MIN (c, s);
 }
 
-static gint
-signal_key_cmp (gconstpointer node1,
+gint
+g_signal_key_cmp (gconstpointer node1,
                 gconstpointer node2)
 {
   const SignalKey *key1 = node1, *key2 = node2;
diff -r --unified glib2.0-2.28.6/gobject/gtype.c glib2.0-2.28.6-patched//gobject/gtype.c
--- glib2.0-2.28.6/gobject/gtype.c	2011-03-04 18:47:10.000000000 +0100
+++ glib2.0-2.28.6-patched//gobject/gtype.c	2013-01-22 17:23:07.397075514 +0100
@@ -1755,8 +1755,8 @@
   gpointer class;
 } InstanceRealClass;
 
-static gint
-instance_real_class_cmp (gconstpointer p1,
+gint
+g_instance_real_class_cmp (gconstpointer p1,
                          gconstpointer p2)
 {
   const InstanceRealClass *irc1 = p1;
@@ -1770,7 +1770,7 @@
 static GBSearchArray *instance_real_class_bsa = NULL;
 static GBSearchConfig instance_real_class_bconfig = {
   sizeof (InstanceRealClass),
-  instance_real_class_cmp,
+  g_instance_real_class_cmp,
   0,
 };
 
diff -r --unified glib2.0-2.28.6/gobject/gvalue.c glib2.0-2.28.6-patched//gobject/gvalue.c
--- glib2.0-2.28.6/gobject/gvalue.c	2010-12-22 13:33:05.000000000 +0100
+++ glib2.0-2.28.6-patched//gobject/gvalue.c	2013-01-22 17:24:40.085050761 +0100
@@ -124,7 +124,7 @@
 
 
 /* --- prototypes --- */
-static gint	transform_entries_cmp	(gconstpointer bsearch_node1,
+gint	g_transform_entries_cmp	(gconstpointer bsearch_node1,
 					 gconstpointer bsearch_node2);
 
 
@@ -132,7 +132,7 @@
 static GBSearchArray *transform_array = NULL;
 static GBSearchConfig transform_bconfig = {
   sizeof (TransformEntry),
-  transform_entries_cmp,
+  g_transform_entries_cmp,
   G_BSEARCH_ARRAY_ALIGN_POWER2,
 };
 
@@ -408,8 +408,8 @@
   return NULL;
 }
 
-static gint
-transform_entries_cmp (gconstpointer bsearch_node1,
+gint
+g_transform_entries_cmp (gconstpointer bsearch_node1,
 		       gconstpointer bsearch_node2)
 {
   const TransformEntry *e1 = bsearch_node1;
