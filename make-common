#-----------------------------------------------------------------------------
# Architecture
#-----------------------------------------------------------------------------

ifndef _ARCH
  _ARCH := $(shell build_scripts/getmakearch.rb | grep "^ARCH" | cut -d':' -f2)
  _ALT_ARCH := $(shell build_scripts/getmakearch.rb | grep "^ALT\_ARCH" | cut -d':' -f2)
  export _ARCH
  export _ALT_ARCH
endif

include makefile-$(_ARCH)

#-----------------------------------------------------------------------------
# Directories
#-----------------------------------------------------------------------------

# directories
MVEE_SRC		= ./MVEE/Src
MVEE_ARCH_SRC	= ./MVEE/Src/arch/$(_ARCH)
MVEE_INC		= ./MVEE/Inc
MVEE_ARCH_INC	= ./MVEE/Inc/arch/$(_ARCH)
MVEE_OUT		= ./MVEE/bin/$(BUILD)
MVEE_BUILD		= ./MVEE/$(BUILD)-$(_ARCH)

#-----------------------------------------------------------------------------
# Source config
#-----------------------------------------------------------------------------

SRC 	 = $(shell find $(MVEE_SRC) -maxdepth 1 -name *.c* | egrep -v "~|\#")
ARCH_SRC = $(shell find $(MVEE_ARCH_SRC) -maxdepth 1 -name *.c*  | egrep -v "~|\#")
SRCS	 = $(SRC) $(ARCH_SRC)

#-----------------------------------------------------------------------------
# Common build config
#-----------------------------------------------------------------------------

STD_CXXFLAGS = -D__LINUX_X86__ -Wall -Werror -Wextra -Wpedantic -Wno-unused-parameter -Wno-unused-function -Ideps/jsoncpp/include/ -Ideps/libdwarf/libdwarf
STD_LDFLAGS  = deps/jsoncpp/build/src/lib_json/libjsoncpp.a deps/libdwarf/libdwarf/.libs/libdwarf.a deps/libelf/lib/libelf.a -ldl -lrt -lstdc++ -lpthread -lz $(ARCH_LDFLAGS)
LIBC_VER     = 2.27.9000

#-----------------------------------------------------------------------------
# Targets
#-----------------------------------------------------------------------------

OBJ := $(SRCS:%.cpp=$(MVEE_BUILD)/%.o)
PRE_BUILD_TABLES := $(shell build_scripts/generate_syscall_tables.rb)
BIN = $(MVEE_OUT)/MVEE

.PHONY: all clean 

all: target

target: $(BIN)															\
		patched_binaries/libc/$(_ARCH)/libc.so.6						\
		patched_binaries/libc/$(_ARCH)/libpthread.so.0					\
		patched_binaries/libc/$(_ARCH)/librt.so.1						\
		patched_binaries/libc/$(_ARCH)/libdl.so.2						\
		patched_binaries/libc/$(_ARCH)/libm.so.6						\
		patched_binaries/libc/$(_ARCH)/libresolv.so.2					\
		patched_binaries/libc/$(_ARCH)/libutil.so.1						\
		patched_binaries/libc/$(_ARCH)/ld-linux.so						\
		patched_binaries/libc/$(_ARCH)/libclang_rt.sync-$(_ALT_ARCH).so \
		MVEE_LD_Loader/MVEE_LD_Loader

patched_binaries/libc/$(_ARCH)/libc.so.6 : patched_binaries/libc/$(_ARCH)/libc-$(LIBC_VER).so
	@-echo "Creating symlink to GHUMVEE-ready libc"
	ln -f -s libc-$(LIBC_VER).so patched_binaries/libc/$(_ARCH)/libc.so.6

patched_binaries/libc/$(_ARCH)/libpthread.so.0 : patched_binaries/libc/$(_ARCH)/libpthread-$(LIBC_VER).so
	@-echo "Creating symlink to GHUMVEE-ready libpthread"
	ln -f -s libpthread-$(LIBC_VER).so patched_binaries/libc/$(_ARCH)/libpthread.so.0

patched_binaries/libc/$(_ARCH)/libdl.so.2 : patched_binaries/libc/$(_ARCH)/libdl-$(LIBC_VER).so
	@-echo "Creating symlink to GHUMVEE-ready libdl"
	ln -f -s libdl-$(LIBC_VER).so patched_binaries/libc/$(_ARCH)/libdl.so.2

patched_binaries/libc/$(_ARCH)/librt.so.1 : patched_binaries/libc/$(_ARCH)/librt-$(LIBC_VER).so
	@-echo "Creating symlink to GHUMVEE-ready librt"
	ln -f -s librt-$(LIBC_VER).so patched_binaries/libc/$(_ARCH)/librt.so.1

patched_binaries/libc/$(_ARCH)/libm.so.6 : patched_binaries/libc/$(_ARCH)/libm-$(LIBC_VER).so
	@-echo "Creating symlink to GHUMVEE-ready libm"
	ln -f -s libm-$(LIBC_VER).so patched_binaries/libc/$(_ARCH)/libm.so.6

patched_binaries/libc/$(_ARCH)/libresolv.so.2 : patched_binaries/libc/$(_ARCH)/libresolv-$(LIBC_VER).so
	@-echo "Creating symlink to GHUMVEE-ready libresolv"
	ln -f -s libresolv-$(LIBC_VER).so patched_binaries/libc/$(_ARCH)/libresolv.so.2

patched_binaries/libc/$(_ARCH)/libutil.so.1 : patched_binaries/libc/$(_ARCH)/libutil-$(LIBC_VER).so
	@-echo "Creating symlink to GHUMVEE-ready libutil"
	ln -f -s libutil-$(LIBC_VER).so patched_binaries/libc/$(_ARCH)/libutil.so.1

patched_binaries/libc/$(_ARCH)/ld-linux.so : patched_binaries/libc/$(_ARCH)/ld-$(LIBC_VER).so
	@-echo "Creating symlink to GHUMVEE-ready ld-linux"
	ln -f -s ld-$(LIBC_VER).so patched_binaries/libc/$(_ARCH)/ld-linux.so

patched_binaries/libc/$(_ARCH)/libclang_rt.sync-$(_ALT_ARCH).so : libsync/libsync.cpp
	build_scripts/compile_syncagent.rb

MVEE_LD_Loader/MVEE_LD_Loader : MVEE_LD_Loader/MVEE_LD_Loader.c MVEE_LD_Loader/$(_ARCH)/MVEE_LD_Loader.h
	build_scripts/compile_loader.rb

DEPS := $(OBJ:.o=.d)

-include $(DEPS)

$(MVEE_BUILD)/%.o: %.cpp
	@-mkdir -p $(MVEE_BUILD)/$(dir $<)
	$(BUILD_CXX) -I/usr/include -I$(MVEE_INC) -I$(MVEE_ARCH_INC) $(STD_CXXFLAGS) $(BUILD_CXXFLAGS) -MM -MT $@ -MF $(patsubst %.o,%.d,$@) $<
	$(BUILD_CXX) -I/usr/include -I$(MVEE_INC) -I$(MVEE_ARCH_INC) $(STD_CXXFLAGS) $(BUILD_CXXFLAGS) -c -o $@ $<

$(BIN): $(OBJ)
	@-mkdir -p $(MVEE_OUT)
	$(BUILD_CXX) -fuse-ld=${BUILD_LINKER} -o $@ $^ $(BUILD_LDFLAGS) $(STD_LDFLAGS)

clean: 
	rm -f $(BIN)
	find $(MVEE_BUILD) -name *.bc | xargs rm -f
	find $(MVEE_BUILD) -name *.o | xargs rm -f
	find $(MVEE_BUILD) -name *.S | xargs rm -f
	find $(MVEE_BUILD) -name *.d | xargs rm -f
	rm -f MVEE_LD_Loader/MVEE_LD_Loader
	rm -f MVEE_LD_Loader/MVEE_LD_Loader_this*
	rm -f libsync/libclang*
